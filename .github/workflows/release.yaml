name: Release Operator-SDK
on:
  workflow_call:
    inputs:
      OPERATOR_SDK_VERSION:
        description: "Version of Operator SDK Binary for installation"
        default: "v1.29.0"
        required: false
        type: string
      RUN_UNIT_TESTS:
        description: "Run unit tests will run the test target in the Makefile"
        default: false
        required: false
        type: boolean
      BUILD_KUSTOMIZE_PACKAGE:
        description: "Building kustomize artifact and release"
        default: false
        required: false
        type: boolean

jobs:
  dump:
    name: Dump GitHub context
    runs-on:
      - self-hosted
      - Linux
      - ARM64
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

  setup:
    name: Setup
    runs-on:
      - self-hosted
      - Linux
      - ARM64
    steps:
      # Get version for release artifacts
      - name: Get version
        id: version
        shell: bash
        run: |
          if [ "GITHUB_REF_TYPE" = "tag" ]; then
            VERSION="${GITHUB_REF#refs/*/v}"
          else
            VERSION="0.0.0-${GITHUB_REF_NAME//[\/]/-}.${GITHUB_SHA::8}"
          fi
          IMAGE_NAME=$(echo "${{ github.event.repository.full_name }}" | tr '[:upper:]' '[:lower:]')

          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "image_version=$VERSION" >> $GITHUB_OUTPUT
          echo "kustomize_version=$VERSION" >> $GITHUB_OUTPUT
      # Checkout code from repository to workplace
      - name: Checkout
        uses: actions/checkout@v3

    outputs:
      image_name: ${{ steps.version.outputs.image_name }}
      image_version: ${{ steps.version.outputs.image_version }}
      kustomize_version: ${{ steps.version.outputs.kustomize_version }}

  build-image:
    name: Build image
    runs-on:
      - self-hosted
      - Linux
      - ARM64
    needs:
      - setup
    steps:
      ## Prepare docker
      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v1
      #  with:
      #    buildkitd-flags: --debug
      ## Login docker registry
      #- name: Login to quay.io
      #  uses: docker/login-action@v2
      #  with:
      #    registry: ${{ vars.DOCKER_REGISTRY }}
      #    username: ${{ secrets.DOCKER_REGISTRY_ID }}
      #    password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      # Build and push image to docker registry
      - name: Building & Pushing Docker Image
        shell: bash
        run: |
          echo "Build image ${{ vars.DOCKER_REGISTRY }}/${{ needs.setup.outputs.image_name }}:${{ needs.setup.outputs.image_version }}"

  package-kustomize:
    name: Package kustomize
    if: ${{ inputs.BUILD_KUSTOMIZE_PACKAGE }}
    runs-on:
      - self-hosted
      - Linux
      - ARM64
    needs:
      - setup
    steps:
      - name: Build kustomize package
        uses: imranismail/setup-kustomize@v2
      - name:
        shell: bash
        run: |
          pushd ./config
          ls -la
          kustomize edit set image "${{ vars.DOCKER_REGISTRY }}/${{ needs.setup.outputs.image_name }}:${{ needs.setup.outputs.image_version }}"
          popd
  
  test-operator:
    name: Test operator
    if: ${{ inputs.RUN_UNIT_TESTS }}
    runs-on:
      - self-hosted
      - Linux
      - ARM64
    needs:
      - setup
      - build-image
      - package-kustomize
    steps:
      - name: NOT DEFINED
        shell: bash
        run: |
          echo "JOB IS NOT DEFINED"
  
  release-version:
    name: Release version
    runs-on:
      - self-hosted
      - Linux
      - ARM64
    needs:
      - setup
      - test-operator
    steps:
      - name: Release version
        shell: bash
        run: |
          echo "RELESE VERSION"


    